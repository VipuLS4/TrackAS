name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "18"

jobs:
  lint-and-format:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npx prettier --check .

      - name: Run type check
        run: npx tsc --noEmit

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  notify-slack:
    name: Notify Slack
    runs-on: ubuntu-latest
    needs: [build]
    if: always()
    steps:
      - name: Notify Slack on Success
        if: needs.build.result == 'success'
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: "✅ CI/CD Pipeline completed successfully!"
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Failure
        if: needs.build.result == 'failure' || needs.lint-and-format.result == 'failure' || needs.test.result == 'failure'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: "❌ CI/CD Pipeline failed. Check the logs for details."
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Optional: Skip Slack notification if webhook is not configured
  notify-slack-optional:
    name: Optional Slack Notification
    runs-on: ubuntu-latest
    needs: [build]
    if: always() && vars.SLACK_NOTIFICATIONS_ENABLED == 'true'
    steps:
      - name: Check if Slack webhook is configured
        id: slack-check
        run: |
          if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            echo "slack_configured=false" >> $GITHUB_OUTPUT
            echo "⚠️ Slack webhook URL not configured. Skipping notification."
          else
            echo "slack_configured=true" >> $GITHUB_OUTPUT
          fi

      - name: Notify Slack
        if: steps.slack-check.outputs.slack_configured == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Pipeline Status: ${{ needs.build.result }}
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
